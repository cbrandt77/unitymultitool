/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nfhsnetwork.unitytool.ui;

import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.ExecutionException;

import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

import com.nfhsnetwork.unitytool.common.StdPropertyChangeEvent;
import com.nfhsnetwork.unitytool.common.StdPropertyChangeEvent.PropertyType;
import com.nfhsnetwork.unitytool.common.StdPropertyChangeListener;
import com.nfhsnetwork.unitytool.common.UnityContainer;
import com.nfhsnetwork.unitytool.io.SSOLogin;
import com.nfhsnetwork.unitytool.utils.LocalFileHelper;

/**
 *
 * @author calebbrandt
 */
public class LoginDialog extends javax.swing.JDialog {
    
	private final Window parent;
	
	private boolean shouldSaveEmail = false;
	
    /**
     * Creates new form NewJFrame
     */
    public LoginDialog(final Window parent) {
    	this(parent, ModalityType.APPLICATION_MODAL);
    }
    
    public LoginDialog(final Window parent, final ModalityType modalityType)
    {
    	super(parent, modalityType);
    	
    	this.parent = parent;
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        field_password = new javax.swing.JPasswordField();
        l_password = new javax.swing.JLabel();
        field_email = new com.nfhsnetwork.unitytool.ui.components.PlaceholderTextField();
        l_email = new javax.swing.JLabel();
        button_submit = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setAlwaysOnTop(true);
        setResizable(false);

        field_password.setText("jPasswordField1");
        field_password.setPreferredSize(new java.awt.Dimension(64, 23));

        l_password.setText("Password");

        l_email.setText("Email Address");

        button_submit.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        button_submit.setText("LOGIN");
        button_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_submitActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Save Email");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_password)
                    .addComponent(l_email)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(field_email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(field_password, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(button_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_email)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_email, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(l_password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_password, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        final JCheckBox source = (JCheckBox)evt.getSource();
        shouldSaveEmail = source.isSelected();
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void button_submitActionPerformed(java.awt.event.ActionEvent evt) {
        javax.swing.SwingWorker<String, String> s = new javax.swing.SwingWorker<String, String>() {
            @Override
            public String doInBackground()
            {
                try {
                    return SSOLogin.loginToUnity(field_email.getText(), field_password.getPassword());
                }
                catch (java.io.IOException e)
                {
                    e.printStackTrace();
                    return null;
                }
            }
            
            @Override
            public void done()
            {
            	this.firePropertyChange("login_done", null, null);
            }
        };
        
        
        // on finish
        s.addPropertyChangeListener((e) -> {
        	if (e.getPropertyName().equals("login_done"))
        	{
        		try {
        			String result;
        			if ((result = s.get()) == null)
        			{
        				loginFailed();
        				return;
        			}
        			
					onLogin(result, field_email.getText());
					return;
				} 
        		catch (InterruptedException | ExecutionException e1)
        		{
					e1.printStackTrace();
        		}
        		loginFailed();
        	}
        });
        
        s.execute();
        
    }
    
    
    private void onLogin(String token, String email)
    {
    	UnityContainer.setAuthToken(token);
    	
    	if (shouldSaveEmail)
    		LocalFileHelper.Credentials.saveRawEmail(email);
    	
    	loginSucceeded();
    }

    
    private void loginFailed()
    {
    	JOptionPane.showOptionDialog(this, "Failed to login, please try again.", "Login Failed", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
    	
    	((ImportDataFrame)parent).enableAllComponents();
    }
    
    private void loginSucceeded()
    {
    	this.setVisible(false);
    	notifyListeners();
    	this.dispose();
    }
    
    
    
    private Set<StdPropertyChangeListener> listeners = new CopyOnWriteArraySet<>();
    
    
    public LoginDialog addActionListener(StdPropertyChangeListener e)
    {
    	listeners.add(e);
    	
    	return this;
    }
    
    private void notifyListeners()
    {
    	final StdPropertyChangeEvent evt = new StdPropertyChangeEvent(this, PropertyType.DONE, null, null);
    	
    	listeners.stream().forEach(el -> el.propertyChange(evt));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_submit;
    private com.nfhsnetwork.unitytool.ui.components.PlaceholderTextField field_email;
    private javax.swing.JPasswordField field_password;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l_email;
    private javax.swing.JLabel l_password;
    // End of variables declaration//GEN-END:variables
}
